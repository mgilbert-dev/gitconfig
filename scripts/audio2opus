#!/usr/bin/env ruby

require 'etc'
require 'slop'
require 'concurrent'
require 'shellwords'

pool    = Concurrent::FixedThreadPool.new Etc.nprocessors
options = {
  bitrate: 96,
}

opts  = Slop.parse do |o|
end
files = opts.parser.arguments.sort

files.each do |file|
  pool.post do
    opus = file.sub /.[^\.]+$/, '.opus'
    cmd  = <<-EOC
      ffmpeg -loglevel quiet -i #{Shellwords.escape file} -f wav - |
      opusenc --quiet - #{Shellwords.escape opus}
    EOC

    puts "Starting #{file}"
    File.unlink opus if File.exists? opus
    ret = system cmd
    if ret
      puts "Converted #{file}"
      File.unlink file
    else
      STDERR.puts "Failed to convert #{file}"
    end
  end
end

pool.wait_for_termination

